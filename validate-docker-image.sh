#!/bin/bash
# Script para validar localmente a imagem Docker antes do deploy

echo "üîç Iniciando valida√ß√£o local da imagem Docker..."

# Verificar se o Docker est√° instalado
if ! command -v docker &> /dev/null; then
  echo "‚ùå Docker n√£o est√° instalado ou n√£o est√° no PATH. Por favor instale Docker."
  exit 1
fi

# Nome da imagem para teste
IMAGE_NAME="iazi-api-test"
CONTAINER_NAME="iazi-api-validator"

# Limpar containers e imagens antigas se existirem
echo "üßπ Limpando recursos antigos..."
docker rm -f $CONTAINER_NAME 2>/dev/null || true
docker rmi $IMAGE_NAME 2>/dev/null || true

# Construir a imagem Docker
echo "üèóÔ∏è Construindo imagem Docker..."
if ! docker build -t $IMAGE_NAME .; then
  echo "‚ùå Falha ao construir a imagem Docker!"
  exit 1
fi
echo "‚úÖ Imagem Docker constru√≠da com sucesso!"

# Criar uma rede para os testes
NETWORK_NAME="iazi-test-network"
docker network create $NETWORK_NAME 2>/dev/null || true

# Executar o container com vari√°veis de ambiente de teste
echo "üöÄ Iniciando container para valida√ß√£o..."
if ! docker run --name $CONTAINER_NAME --network $NETWORK_NAME -d \
  -e NODE_ENV=development \
  -e DATABASE_URL="postgresql://postgres:postgres@localhost:5432/testdb" \
  -e JWT_SECRET="test-secret" \
  -e REFRESH_TOKEN_SECRET="test-refresh-secret" \
  -e PORT=3002 \
  $IMAGE_NAME; then
  echo "‚ùå Falha ao iniciar o container!"
  exit 1
fi

# Aguardar a inicializa√ß√£o do container
echo "‚è≥ Aguardando inicializa√ß√£o do container..."
sleep 5

# Verificar logs do container para erros
echo "üìú Verificando logs do container..."
if docker logs $CONTAINER_NAME | grep -i "error\|exception\|cannot find module"; then
  echo "‚ö†Ô∏è Encontrados poss√≠veis erros nos logs do container!"
  docker logs $CONTAINER_NAME
else
  echo "‚úÖ Nenhum erro encontrado nos logs!"
fi

# Verificar se o processo principal est√° em execu√ß√£o
echo "üîÑ Verificando processo principal..."
if docker exec $CONTAINER_NAME ps aux | grep -q "node dist/index"; then
  echo "‚úÖ Processo principal est√° em execu√ß√£o!"
else
  echo "‚ùå Processo principal n√£o est√° em execu√ß√£o!"
  docker logs $CONTAINER_NAME
  docker rm -f $CONTAINER_NAME
  exit 1
fi

# Limpar recursos
echo "üßπ Limpando recursos..."
docker rm -f $CONTAINER_NAME
docker network rm $NETWORK_NAME

echo "‚úÖ Valida√ß√£o conclu√≠da com sucesso! A imagem est√° pronta para deploy."
