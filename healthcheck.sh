#!/bin/sh
# healthcheck.sh
# Script para verificar a sa√∫de da aplica√ß√£o com detec√ß√£o aprimorada de problemas

# Configura√ß√µes
HOST="localhost"
PORT="${PORT:-3002}" # Usa valor da vari√°vel PORT ou 3002 como padr√£o
ENDPOINT="/api/health"
TIMEOUT=15
MAX_RETRIES=3
RETRY_INTERVAL=5

echo "ü©∫ Verificando sa√∫de da aplica√ß√£o em http://$HOST:$PORT$ENDPOINT"

# Fun√ß√£o para verificar sa√∫de com m√∫ltiplas tentativas
check_health() {
  for i in $(seq 1 $MAX_RETRIES); do
    echo "üîÑ Tentativa $i de $MAX_RETRIES..."
    
    # Usa wget para fazer a requisi√ß√£o HTTP
    response=$(wget --quiet --tries=1 --timeout=$TIMEOUT -O- "http://$HOST:$PORT$ENDPOINT" 2>&1)
    status=$?
    
    # Verifica√ß√µes adicionais
    if [ $status -eq 0 ]; then
      # Se conseguiu fazer a requisi√ß√£o, a aplica√ß√£o est√° respondendo
      # Consideramos isso um sucesso mesmo que o status n√£o seja "ok"
      echo "‚úÖ Aplica√ß√£o est√° respondendo na porta $PORT"
      
      # Verifica se conseguimos fazer parse do JSON
      if echo "$response" | grep -q "\"appStatus\""; then
        echo "‚úÖ Health check retornou resposta v√°lida"
        
        # Verifica conectividade com banco de dados (n√£o cr√≠tico)
        if echo "$response" | grep -q "\"dbConnected\".*:.*true"; then
          echo "‚úÖ Banco de dados conectado"
        else
          echo "‚ö†Ô∏è Banco de dados n√£o conectado, mas aplica√ß√£o est√° funcionando"
        fi
        
        # Se chegamos at√© aqui, a aplica√ß√£o est√° respondendo
        exit 0
      else
        echo "‚ö†Ô∏è Resposta do servidor n√£o cont√©m informa√ß√µes de sa√∫de esperadas"
        echo "Resposta: $response"
      fi
    else
      echo "‚ö†Ô∏è Falha ao acessar endpoint de sa√∫de: status=$status"
    fi
    
    # Se n√£o √© a √∫ltima tentativa, aguarda antes de tentar novamente
    if [ $i -lt $MAX_RETRIES ]; then
      echo "‚è≥ Aguardando $RETRY_INTERVAL segundos antes de tentar novamente..."
      sleep $RETRY_INTERVAL
    fi
  done
  
  # Se chegamos aqui, todas as tentativas falharam
  echo "‚ùå Falha no healthcheck ap√≥s $MAX_RETRIES tentativas"
  
  # Verificar se o processo Node.js est√° rodando
  node_running=$(ps aux | grep "[n]ode" | wc -l)
  if [ "$node_running" -gt 0 ]; then
    echo "‚úÖ Processos Node.js detectados: $node_running"
    echo "‚ö†Ô∏è A aplica√ß√£o parece estar rodando, mas n√£o responde ao healthcheck"
    # Considerar em execu√ß√£o mesmo com falha no healthcheck para evitar rein√≠cios desnecess√°rios
    exit 0
  fi
  
  # Se o processo n√£o est√° rodando, falhou de fato
  echo "‚ùå Nenhum processo Node.js detectado"
  exit 1
}

# Executar verifica√ß√£o de sa√∫de
check_health
